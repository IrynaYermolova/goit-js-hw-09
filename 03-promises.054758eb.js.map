{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEmBC,SAASC,cAAc,SAE/BC,iBAAiB,UAE5B,SAAsBC,GACpBA,EAAMC,iBAEN,MAAMC,EAASF,EAAMG,cAAcD,OAAOE,MACpCC,EAAOL,EAAMG,cAAcE,KAAKD,MACtC,IAAIE,EAAQN,EAAMG,cAAcI,MAAMH,MAEtC,IAAK,IAAII,EAAkB,EAAGA,GAAmBN,EAAQM,IACvDC,EAAcD,EAAiBF,GAC5BI,MAAK,EAACC,SAAEA,EAAQJ,MAAEA,MACjBK,EAAAjB,GAASkB,OAAOC,QACd,uBAAqBH,QAAiBJ,OAExCQ,QAAQC,IAAI,uBAAqBL,QAAiBJ,MAAU,IAE7DU,OAAM,EAACN,SAAEA,EAAQJ,MAAEA,MAClBK,EAAAjB,GAASkB,OAAOK,QACd,sBAAoBP,QAAiBJ,OAEvCQ,QAAQC,IAAI,sBAAoBL,QAAiBJ,MAAU,IAE/DD,GAASD,EAGX,SAASI,EAAcE,EAAUJ,GAC/B,MAAMY,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SAAEZ,E,MAAUJ,IAEpBiB,EAAO,C,SAAEb,E,MAAUJ,GAAQ,GAE5BA,EAAM,G,CAIbP,EAAMG,cAAcuB,K","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formSubmit = document.querySelector('.form');\n\nformSubmit.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n\n  const amount = event.currentTarget.amount.value;\n  const step = event.currentTarget.step.value;\n  let delay = event.currentTarget.delay.value;\n\n  for (let currentPosition = 1; currentPosition <= amount; currentPosition++) {\n    createPromise(currentPosition, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    delay += step;\n  }\n\n  function createPromise(position, delay) {\n    const shouldResolve = Math.random() > 0.3;\n\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        if (shouldResolve) {\n          resolve({ position, delay });\n        } else {\n          reject({ position, delay });\n        }\n      }, delay);\n    });\n  }\n\n  event.currentTarget.reset;\n}\n\n// console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n// console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n"],"names":["$7Y9D8","parcelRequire","document","querySelector","addEventListener","event","preventDefault","amount","currentTarget","value","step","delay1","delay","currentPosition","createPromise","then","position","$parcel$interopDefault","Notify","success","console","log","catch","failure","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","reset"],"version":3,"file":"03-promises.054758eb.js.map"}