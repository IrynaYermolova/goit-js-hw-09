{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEmBC,SAASC,cAAc,SAE/BC,iBAAiB,UAE5B,SAAsBC,GACpBA,EAAMC,iBAMN,IAAIC,EAAQC,OAAOH,EAAMI,cAAcC,MAAMC,OACzCC,EAAOJ,OAAOH,EAAMI,cAAcG,KAAKD,OACvCE,EAASL,OAAOH,EAAMI,cAAcI,OAAOF,OAE/C,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAQC,GAAK,EAChCC,EAAcD,EAAGP,GACdS,MAAK,EAACC,SAAEA,EAAQP,MAAEA,MACjBQ,EAAAlB,GAASmB,OAAOC,QACd,uBAAqBH,QAAiBP,MAAU,IAInDW,OAAM,EAACJ,SAAEA,EAAQP,MAAEA,MAClBQ,EAAAlB,GAASmB,OAAOG,QACd,sBAAoBL,QAAiBP,MAAU,IAIrDH,GAASK,EAGX,SAASG,EAAcE,EAAUP,GAE/B,OAAO,IAAIa,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEP,E,MAAUP,IAEpBe,EAAO,C,SAAER,E,MAAUP,GAAQ,GAE5BA,EAAM,G,CAIbL,EAAMI,cAAcqB,K","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formSubmit = document.querySelector('.form');\n\nformSubmit.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n\n  // const amount = event.currentTarget.amount.value;\n  // const step = event.currentTarget.step.value;\n  // let delay = event.currentTarget.delay.value;\n\n  let delay = Number(event.currentTarget.delay.value);\n  let step = Number(event.currentTarget.step.value);\n  let amount = Number(event.currentTarget.amount.value);\n\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms` \n        );\n        // console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n        // console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    delay += step;\n  }\n\n  function createPromise(position, delay) {\n    \n    return new Promise((resolve, reject) => {\n      const shouldResolve = Math.random() > 0.3;\n\n      setTimeout(() => {\n        if (shouldResolve) {\n          resolve({ position, delay });\n        } else {\n          reject({ position, delay });\n        }\n      }, delay);\n    });\n  }\n\n  event.currentTarget.reset;\n}\n\n"],"names":["$7Y9D8","parcelRequire","document","querySelector","addEventListener","event","preventDefault","delay1","Number","currentTarget","delay","value","step","amount","i","createPromise","then","position","$parcel$interopDefault","Notify","success","catch","failure","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","reset"],"version":3,"file":"03-promises.19ae1d81.js.map"}